{
  "manifestVersion": "3.1",
  "impls": {
    "bb6f5a14bdca46be946537f42d79aba5a8fe50069a29e05fa8fc8688122323a1": {
      "address": "0x39dC2300C52E62Ba1dc59955C4f9F2a16937C142",
      "txHash": "0x0e43a3297d173ca3396add7bbe4b8b2bec65cb0860057e3fdc8549fd1c22e799",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SystemParameters",
            "label": "PROVIDER_MINIMUM_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:9"
          },
          {
            "contract": "SystemParameters",
            "label": "REQUESTER_MINIMUM_POOL_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:12"
          },
          {
            "contract": "SystemParameters",
            "label": "SLASHINGS_FOR_MIGRATION",
            "type": "t_uint256",
            "src": "SystemParameters.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae36c467c7fdd190943129d7617f4ba873aab36071d701790f935d1a80b4fb99": {
      "address": "0x147ca0f5BB0D2E1cBf69842E45D0748247784879",
      "txHash": "0xe0020a47b5c019bd2cbc1645feec3c35253cc3aa31034ad3b8d37942965f39a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:21"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:24"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:27"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e35ffd3db57bf0a32c4e4005a9663c3b690aca81ab6809b3a64ec00b830ab863": {
      "address": "0x3b2a3E894Bb62d254fF4B0584204Cb60744d4A32",
      "txHash": "0x6fcfb25e9abb515dc324835781fcdb00010e290cbc0822f0cf3a05e674a1aa58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1696_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3732",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1636",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3659",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_depositContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1696_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1636": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3659": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec002a9bb6406b5a9ef1bc4cfff7a03a913746a9c23cd5162e4bd9d82c83102c": {
      "address": "0xc509976d7bd3F577e1C9822CA50FbDFa47e4D0e7",
      "txHash": "0x9dcf7b6013af465877f46392b766094ac9d121a2d8ab5ecdd25c3e24c2e7b565",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3732",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3792",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)5027",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)2953_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3792": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)5027": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)2953_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "92bf1be904cb366e4eeadbc8220a69290e431c023d4316cf777a878afc13ba96": {
      "address": "0xe01CA22d84E31187E7E8e5Af94a446a2f497d6ca",
      "txHash": "0xaf8d742cb8d65db1d5a819ca58e2aaec215bf9379405d444484d2bff7a5e7c75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "MarketPlace",
            "label": "_ethUsd",
            "type": "t_uint256",
            "src": "MarketPlace.sol:14"
          },
          {
            "contract": "MarketPlace",
            "label": "_ankrEth",
            "type": "t_uint256",
            "src": "MarketPlace.sol:15"
          },
          {
            "contract": "MarketPlace",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3732",
            "src": "MarketPlace.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xB841Fdf43A2F35805922f7f7461428AbCFbF36B3",
    "txHash": "0xbbacd9405c3a9c05bf4e4d577684fdc241ff47c074ccd3e476066c8dbf07c088"
  }
}
