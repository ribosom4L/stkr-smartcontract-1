{
  "manifestVersion": "3.1",
  "impls": {
    "bb6f5a14bdca46be946537f42d79aba5a8fe50069a29e05fa8fc8688122323a1": {
      "address": "0x39dC2300C52E62Ba1dc59955C4f9F2a16937C142",
      "txHash": "0x0e43a3297d173ca3396add7bbe4b8b2bec65cb0860057e3fdc8549fd1c22e799",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SystemParameters",
            "label": "PROVIDER_MINIMUM_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:9"
          },
          {
            "contract": "SystemParameters",
            "label": "REQUESTER_MINIMUM_POOL_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:12"
          },
          {
            "contract": "SystemParameters",
            "label": "SLASHINGS_FOR_MIGRATION",
            "type": "t_uint256",
            "src": "SystemParameters.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae36c467c7fdd190943129d7617f4ba873aab36071d701790f935d1a80b4fb99": {
      "address": "0x147ca0f5BB0D2E1cBf69842E45D0748247784879",
      "txHash": "0xe0020a47b5c019bd2cbc1645feec3c35253cc3aa31034ad3b8d37942965f39a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:21"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:24"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:27"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e35ffd3db57bf0a32c4e4005a9663c3b690aca81ab6809b3a64ec00b830ab863": {
      "address": "0x3b2a3E894Bb62d254fF4B0584204Cb60744d4A32",
      "txHash": "0x6fcfb25e9abb515dc324835781fcdb00010e290cbc0822f0cf3a05e674a1aa58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1696_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3732",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1636",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3659",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_depositContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1696_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1636": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3659": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec002a9bb6406b5a9ef1bc4cfff7a03a913746a9c23cd5162e4bd9d82c83102c": {
      "address": "0xc509976d7bd3F577e1C9822CA50FbDFa47e4D0e7",
      "txHash": "0x9dcf7b6013af465877f46392b766094ac9d121a2d8ab5ecdd25c3e24c2e7b565",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3732",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3792",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)5027",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)2953_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3792": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)5027": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)2953_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "92bf1be904cb366e4eeadbc8220a69290e431c023d4316cf777a878afc13ba96": {
      "address": "0xe01CA22d84E31187E7E8e5Af94a446a2f497d6ca",
      "txHash": "0xaf8d742cb8d65db1d5a819ca58e2aaec215bf9379405d444484d2bff7a5e7c75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "MarketPlace",
            "label": "_ethUsd",
            "type": "t_uint256",
            "src": "MarketPlace.sol:14"
          },
          {
            "contract": "MarketPlace",
            "label": "_ankrEth",
            "type": "t_uint256",
            "src": "MarketPlace.sol:15"
          },
          {
            "contract": "MarketPlace",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3732",
            "src": "MarketPlace.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3732": {
            "label": "contract IAETH"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ade4122ac416e4627152e0d1f572c6967f130e2e0ea6e7abbb949037c4a4c70d": {
      "address": "0x9a3e38f1e005d2f9209D84A20264D9E8B41b76F1",
      "txHash": "0x7b0ddf6dd6ad7654d6b573a674405b445ec047b60a471ab2f516daa062eb66d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SystemParameters",
            "label": "PROVIDER_MINIMUM_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:9"
          },
          {
            "contract": "SystemParameters",
            "label": "REQUESTER_MINIMUM_POOL_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:12"
          },
          {
            "contract": "SystemParameters",
            "label": "SLASHINGS_FOR_MIGRATION",
            "type": "t_uint256",
            "src": "SystemParameters.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86c88bd16f445c495b9a27172f9ab24361195ece34a7da95889b109259c6153a": {
      "address": "0x92Ebdc9e2181CeFc98A1d1CDb222da69f507ceB8",
      "txHash": "0x1bec7fd58d7dced3b92fffbabc41315018edeb47c4f3ead107d21fade6e0d5ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1704_storage)dyn_storage",
            "src": "MicroPool.sol:64"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3812",
            "src": "MicroPool.sol:67"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1642",
            "src": "MicroPool.sol:69"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3739",
            "src": "MicroPool.sol:71"
          },
          {
            "contract": "MicroPool",
            "label": "_depositContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:73"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1704_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1642": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3739": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3c80af61879220f81f58d8d3bb59f551981a77ffa2e1a497d57855ed41b3873": {
      "address": "0xAD55F71934E9C69aA07C867ec298bb1D967C4C94",
      "txHash": "0x53ed944ed1655850c263bad5d7d40750b0d065866b693ccfd8d3f6d38b9a9262",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3812",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3872",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)5107",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)3008_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3872": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)5107": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)3008_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e6e7495abaa32dbac19cd42c3d4b3e51667e47e5673f4e31954cfe542f421f8": {
      "address": "0x66318Df516FbC8DC1066abee880142EBb3296A04",
      "txHash": "0x516eb5456c26ed9015d438171996d856b85ff66ffbbd760af57dfd08084ae661",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "MarketPlace",
            "label": "_ethUsd",
            "type": "t_uint256",
            "src": "MarketPlace.sol:14"
          },
          {
            "contract": "MarketPlace",
            "label": "_ankrEth",
            "type": "t_uint256",
            "src": "MarketPlace.sol:15"
          },
          {
            "contract": "MarketPlace",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3812",
            "src": "MarketPlace.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "14a568fbf829ab78858cece116882b1a1b109f5de6ba0641e88fdf05096f2df8": {
      "address": "0x43925Db5205954Af39e6e4421C71D896052336Ef",
      "txHash": "0x723bcf434b9ca88959805964c31a63147ca56daa897cd2a8f5deb88668c385d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1704_storage)dyn_storage",
            "src": "MicroPool.sol:64"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3858",
            "src": "MicroPool.sol:67"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1642",
            "src": "MicroPool.sol:69"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3785",
            "src": "MicroPool.sol:71"
          },
          {
            "contract": "MicroPool",
            "label": "_depositContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:73"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1704_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3858": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1642": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3785": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5d5b88175a4b17339f99e68826f9817560527ad227e43a858fbcdc5aa1811706": {
      "address": "0x5362Dd17B074e2751047B3141D89823EB5Bc2E1D",
      "txHash": "0x7625c4cd85ee08cc3e0f52cd0033bd6fab623181242153cf7d750c2e3bb1ed45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:21"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:24"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:27"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da8a9e6fbfccb77de15f1f62d19d07e8da091f80b5493f96acc8c5bd5db68ffa": {
      "address": "0xD61d669B79CCF771947464A8133bb90bDcE4Bc9F",
      "txHash": "0xb5de0ff9b5dc8c3a44b6bdf2022c0c27eeacc2d872176e30dc68a5e31eeffe52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3861",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3921",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)5156",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)3056_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3861": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3921": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)5156": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)3056_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xB841Fdf43A2F35805922f7f7461428AbCFbF36B3",
    "txHash": "0xbbacd9405c3a9c05bf4e4d577684fdc241ff47c074ccd3e476066c8dbf07c088"
  }
}
