{
  "manifestVersion": "3.1",
  "impls": {
    "b413e6573eda6f3f7c00e704d5639bbb16692600f65793d27549484b0cc8c856": {
      "address": "0xCeBe80cE76b13C9eED15124f013B23AF5676853A",
      "txHash": "0x53d3d547bbcd91f05ee6e5f2e7fe615affaf82e1d5937f89a24991a3c0c1b16d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:16"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:19"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:23"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:27"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c11a5456f99ff1f56d5c3d0508e8f7bc38e19fe155bf443982452614f0babd20": {
      "address": "0x9f2b158Ef9c13f76702e96f9B07c3A3EF6d707DD",
      "txHash": "0xd920469189f8d651e7773dd949db760cc430a17e00274bb52399f1f8dcd72c38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1136_storage)dyn_storage",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:60"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3083",
            "src": "MicroPool.sol:62"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1075",
            "src": "MicroPool.sol:64"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3010",
            "src": "MicroPool.sol:66"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:68"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1136_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3083": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1075": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3010": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e553c8a354bfde8c24e458b40d829924c1f3982935485adf6991e42fd56c34af": {
      "address": "0xb59a85d80049472C9d66Da52400770B368183B92",
      "txHash": "0x9fc149a07211d577c58727b33b80a00d69eb2e2c4a609caf4064e61a177b6fd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1134_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3086",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1075",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3013",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1134_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3086": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1075": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3013": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec002a9bb6406b5a9ef1bc4cfff7a03a913746a9c23cd5162e4bd9d82c83102c": {
      "address": "0x7CEfdF60D40F629e3cFAb1a4386f9B7bF691C942",
      "txHash": "0xf1bc7713f62ce9d7b6573d9b8a4f38d250c589acec6e2a7a32a83ba9a1f10b3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3112",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3172",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)4407",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)2333_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3112": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3172": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)4407": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)2333_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "92bf1be904cb366e4eeadbc8220a69290e431c023d4316cf777a878afc13ba96": {
      "address": "0x481d8Cad5f8C42673BFe6A924264D294109968c3",
      "txHash": "0xf8a5e25a2e30c6b159654c7cf6482431618c388519889e7646196d82ad7990a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "MarketPlace",
            "label": "_ethUsd",
            "type": "t_uint256",
            "src": "MarketPlace.sol:14"
          },
          {
            "contract": "MarketPlace",
            "label": "_ankrEth",
            "type": "t_uint256",
            "src": "MarketPlace.sol:15"
          },
          {
            "contract": "MarketPlace",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3112",
            "src": "MarketPlace.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3112": {
            "label": "contract IAETH"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7981a8795c9d09ba320395dc776156ea224fbcb7b1ad10e2f8bdd691c5f826f8": {
      "address": "0x14645f7A575e5dF8B5EDE99AaD89720e95252576",
      "txHash": "0xee55e50a5dc5453c0edafb013396a2a7b7c30960115f0b957f96cd5fb6a6e93e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:16"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:19"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:23"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:27"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "453047965e7e0897610d38c7d5ff9d0631226fcf0699391783f1ac9dc899322c": {
      "address": "0x49C6e6A333B00Cf6a0c94D3B8Ba488ACf5c45C33",
      "txHash": "0x6ee5493378f757b05859232bb4ac9274d2874c6cc12ded166772c335b28597da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SystemParameters",
            "label": "PROVIDER_MINIMUM_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:9"
          },
          {
            "contract": "SystemParameters",
            "label": "REQUESTER_MINIMUM_POOL_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:12"
          },
          {
            "contract": "SystemParameters",
            "label": "SLASHINGS_FOR_MIGRATION",
            "type": "t_uint256",
            "src": "SystemParameters.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b4cfef18e7aef6d243ac1b2776ef460717c0abf6b3e98928331936a2576bb020": {
      "address": "0x5207d216004c17E13CD89Fb1d5bA5e7d32dDA7F1",
      "txHash": "0xe46ef81f1b8a061dc67a5eff4fb632ff376e57089e2e679f5bb3af846dab006f",
      "layout": {
        "storage": [
          {
            "contract": "ANKR",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ANKR.sol:12"
          },
          {
            "contract": "ANKR",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "ANKR.sol:13"
          },
          {
            "contract": "ANKR",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "ANKR.sol:14"
          },
          {
            "contract": "ANKR",
            "label": "_name",
            "type": "t_string_storage",
            "src": "ANKR.sol:16"
          },
          {
            "contract": "ANKR",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "ANKR.sol:17"
          },
          {
            "contract": "ANKR",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ANKR.sol:18"
          },
          {
            "contract": "ANKR",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "ANKR.sol:20"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "7d539cdd3d6dc69cd1ad3b30b4d070bfee76102b7c90ed942788c3779f96d9c5": {
      "address": "0xaEEB2B657cD54c94F3f1f79Ea5a1F65Da5fb6216",
      "txHash": "0x466944d510f8106e03cef8816d856b6e9b5d51a009ba6ad6f60c1ee7f6692ea8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1134_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3112",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1075",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3039",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1134_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3112": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1075": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3039": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x35Ac54a964477ea2bEae7270BdacC331Fe13A1Ab",
    "txHash": "0x08c824e9826aa3965a972e7062a96d2a853dfa39e2e05cfc798ee7d3307b6330"
  }
}
