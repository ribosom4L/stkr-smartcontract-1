{
  "manifestVersion": "3.1",
  "impls": {
    "b413e6573eda6f3f7c00e704d5639bbb16692600f65793d27549484b0cc8c856": {
      "address": "0xCeBe80cE76b13C9eED15124f013B23AF5676853A",
      "txHash": "0x53d3d547bbcd91f05ee6e5f2e7fe615affaf82e1d5937f89a24991a3c0c1b16d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:16"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:19"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:23"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:27"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c11a5456f99ff1f56d5c3d0508e8f7bc38e19fe155bf443982452614f0babd20": {
      "address": "0x9f2b158Ef9c13f76702e96f9B07c3A3EF6d707DD",
      "txHash": "0xd920469189f8d651e7773dd949db760cc430a17e00274bb52399f1f8dcd72c38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1136_storage)dyn_storage",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:60"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3083",
            "src": "MicroPool.sol:62"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1075",
            "src": "MicroPool.sol:64"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3010",
            "src": "MicroPool.sol:66"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:68"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1136_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3083": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1075": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3010": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e553c8a354bfde8c24e458b40d829924c1f3982935485adf6991e42fd56c34af": {
      "address": "0xb59a85d80049472C9d66Da52400770B368183B92",
      "txHash": "0x9fc149a07211d577c58727b33b80a00d69eb2e2c4a609caf4064e61a177b6fd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1134_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3086",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1075",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3013",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1134_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3086": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1075": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3013": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b4cfef18e7aef6d243ac1b2776ef460717c0abf6b3e98928331936a2576bb020": {
      "address": "0x2C2B9C9a4a25e24B174f26114e8926a9f2128FE4",
      "txHash": "0xeeaf3919fbf2e88e85456f06c629e6ca92321b6189aa2e6912b3a1e1d1618b17",
      "layout": {
        "storage": [
          {
            "contract": "ANKR",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ANKR.sol:12"
          },
          {
            "contract": "ANKR",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "ANKR.sol:13"
          },
          {
            "contract": "ANKR",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "ANKR.sol:14"
          },
          {
            "contract": "ANKR",
            "label": "_name",
            "type": "t_string_storage",
            "src": "ANKR.sol:16"
          },
          {
            "contract": "ANKR",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "ANKR.sol:17"
          },
          {
            "contract": "ANKR",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ANKR.sol:18"
          },
          {
            "contract": "ANKR",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "ANKR.sol:20"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "5b285d534f5e810c8a5140b3e5892eff6d5eececa65ec30553f6df2f2f9436b8": {
      "address": "0x75c35C980C0d37ef46DF04d31A140b65503c0eEd",
      "txHash": "0x6637b417c2fa46cfcc7d4b1ebb23573ac8dcd1c9720a2d3ed375d3212765dc85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1127_storage)dyn_storage",
            "src": "MicroPool.sol:58"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:59"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3132",
            "src": "MicroPool.sol:61"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1068",
            "src": "MicroPool.sol:63"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3059",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_beaconContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:67"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1127_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3132": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1068": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3059": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae36c467c7fdd190943129d7617f4ba873aab36071d701790f935d1a80b4fb99": {
      "address": "0xFB88dE099e13c3ED21F80a7a1E49f8CAEcF10df6",
      "txHash": "0x5bbdc4bb2eceaa5f6e413da336104fb34137f371a075da477e1ca187a6ad8235",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "AETH",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "AETH.sol:18"
          },
          {
            "contract": "AETH",
            "label": "_name",
            "type": "t_string_storage",
            "src": "AETH.sol:20"
          },
          {
            "contract": "AETH",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "AETH.sol:21"
          },
          {
            "contract": "AETH",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "AETH.sol:22"
          },
          {
            "contract": "AETH",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:24"
          },
          {
            "contract": "AETH",
            "label": "_frozenBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AETH.sol:25"
          },
          {
            "contract": "AETH",
            "label": "_claimable",
            "type": "t_bool",
            "src": "AETH.sol:27"
          },
          {
            "contract": "AETH",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "AETH.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ade4122ac416e4627152e0d1f572c6967f130e2e0ea6e7abbb949037c4a4c70d": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0xdc5f147ee7e337fd30fea53e2fa763dc867e99847763fba39483bd1d82ed472a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SystemParameters",
            "label": "PROVIDER_MINIMUM_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:9"
          },
          {
            "contract": "SystemParameters",
            "label": "REQUESTER_MINIMUM_POOL_STAKING",
            "type": "t_uint256",
            "src": "SystemParameters.sol:12"
          },
          {
            "contract": "SystemParameters",
            "label": "SLASHINGS_FOR_MIGRATION",
            "type": "t_uint256",
            "src": "SystemParameters.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e6e7495abaa32dbac19cd42c3d4b3e51667e47e5673f4e31954cfe542f421f8": {
      "address": "0x13274Fe19C0178208bCbee397af8167A7be27f6f",
      "txHash": "0xca0a5524c0a9f21c92d9508b51a7cf11edf4327758cb5716dfefc5031b03aaea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "MarketPlace",
            "label": "_ethUsd",
            "type": "t_uint256",
            "src": "MarketPlace.sol:14"
          },
          {
            "contract": "MarketPlace",
            "label": "_ankrEth",
            "type": "t_uint256",
            "src": "MarketPlace.sol:15"
          },
          {
            "contract": "MarketPlace",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3812",
            "src": "MarketPlace.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86c88bd16f445c495b9a27172f9ab24361195ece34a7da95889b109259c6153a": {
      "address": "0x82D50AD3C1091866E258Fd0f1a7cC9674609D254",
      "txHash": "0xe19892313ccc201ed055efb0b796acc4b1c547043fba0a50d45090555b99ffa1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "MicroPool",
            "label": "_pools",
            "type": "t_array(t_struct(Pool)1704_storage)dyn_storage",
            "src": "MicroPool.sol:64"
          },
          {
            "contract": "MicroPool",
            "label": "pendingPools",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "MicroPool.sol:65"
          },
          {
            "contract": "MicroPool",
            "label": "_aethContract",
            "type": "t_contract(IAETH)3812",
            "src": "MicroPool.sol:67"
          },
          {
            "contract": "MicroPool",
            "label": "_stakingContract",
            "type": "t_contract(IStaking)1642",
            "src": "MicroPool.sol:69"
          },
          {
            "contract": "MicroPool",
            "label": "_systemParameters",
            "type": "t_contract(SystemParameters)3739",
            "src": "MicroPool.sol:71"
          },
          {
            "contract": "MicroPool",
            "label": "_depositContract",
            "type": "t_address_payable",
            "src": "MicroPool.sol:73"
          }
        ],
        "types": {
          "t_array(t_struct(Pool)1704_storage)dyn_storage": {
            "label": "struct MicroPool.Pool[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_contract(IStaking)1642": {
            "label": "contract IStaking"
          },
          "t_contract(SystemParameters)3739": {
            "label": "contract SystemParameters"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3c80af61879220f81f58d8d3bb59f551981a77ffa2e1a497d57855ed41b3873": {
      "address": "0xEcFcaB0A285d3380E488A39B4BB21e777f8A4EaC",
      "txHash": "0x63eff4d930a5c9b438ba31b2d0d292c0c065f0f692478979b129edcbfb4d394a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Lockable",
            "label": "_locks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/Lockable.sol:4"
          },
          {
            "contract": "Staking",
            "label": "claimableAfter",
            "type": "t_uint256",
            "src": "Staking.sol:59"
          },
          {
            "contract": "Staking",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "Staking.sol:62"
          },
          {
            "contract": "Staking",
            "label": "AETHContract",
            "type": "t_contract(IAETH)3812",
            "src": "Staking.sol:64"
          },
          {
            "contract": "Staking",
            "label": "_marketPlaceContract",
            "type": "t_contract(IMarketPlace)3872",
            "src": "Staking.sol:66"
          },
          {
            "contract": "Staking",
            "label": "_ankrContract",
            "type": "t_contract(IERC20)5107",
            "src": "Staking.sol:68"
          },
          {
            "contract": "Staking",
            "label": "_microPoolContract",
            "type": "t_address",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "_stakes",
            "type": "t_mapping(t_address,t_struct(UserStake)3008_storage)",
            "src": "Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "Staking.sol:74"
          },
          {
            "contract": "Staking",
            "label": "totalStakes",
            "type": "t_uint256",
            "src": "Staking.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IAETH)3812": {
            "label": "contract IAETH"
          },
          "t_contract(IMarketPlace)3872": {
            "label": "contract IMarketPlace"
          },
          "t_contract(IERC20)5107": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserStake)3008_storage)": {
            "label": "mapping(address => struct Staking.UserStake)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
    "txHash": "0x69932c130ea3097ebd7aecad72a043a33afd4be622be5eee31320aa430c60d8a"
  }
}
