{
  "contractName": "SystemParameters",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PROVIDER_MINIMUM_STAKING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "REQUESTER_MINIMUM_POOL_STAKING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "SLASHINGS_FOR_MIGRATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PROVIDER_MINIMUM_STAKING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REQUESTER_MINIMUM_POOL_STAKING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLASHINGS_FOR_MIGRATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/anilkucukrecep/Code/Personal/st/contracts/contracts/SystemParameters.sol\":\"SystemParameters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/anilkucukrecep/Code/Personal/st/contracts/contracts/SystemParameters.sol\":{\"keccak256\":\"0xffd3dd7249c404251babdc9425ee71f5cca020a069a07a00842ffb9874b28fd3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e3541436fbead20e16657e50832d0014c1b8578be23a486c1275d1e4a8824a65\",\"dweb:/ipfs/QmNqFKMEui5GVn3Z9KMyWBioLnQxLup5bpgcJ32Va9f7aA\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610725806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100dc5780638129fc1c146100e65780638da5cb5b146100f0578063f2fde38b1461013a5761007d565b80631aea175e1461008257806321011331146100a05780636c70b1e5146100be575b600080fd5b61008a61017e565b6040518082815260200191505060405180910390f35b6100a8610184565b6040518082815260200191505060405180910390f35b6100c661018a565b6040518082815260200191505060405180910390f35b6100e4610190565b005b6100ee61031b565b005b6100f8610442565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017c6004803603602081101561015057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061046c565b005b60995481565b60985481565b60975481565b61019861067c565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461025a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff168061033a5750610339610684565b5b8061035157506000809054906101000a900460ff16155b6103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806106c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156103f6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620186a060978190555067016345785d8a0000609881905550670de0b6b3a7640000609981905550801561043f5760008060016101000a81548160ff0219169083151502179055505b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61047461067c565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610536576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061069c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000803090506000813b905060008114925050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a26469706673582212204f3ad7cb7a3c5b926a5e7592722861868b627ad5be9ea70cc42b86b21221df3b64736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100dc5780638129fc1c146100e65780638da5cb5b146100f0578063f2fde38b1461013a5761007d565b80631aea175e1461008257806321011331146100a05780636c70b1e5146100be575b600080fd5b61008a61017e565b6040518082815260200191505060405180910390f35b6100a8610184565b6040518082815260200191505060405180910390f35b6100c661018a565b6040518082815260200191505060405180910390f35b6100e4610190565b005b6100ee61031b565b005b6100f8610442565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017c6004803603602081101561015057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061046c565b005b60995481565b60985481565b60975481565b61019861067c565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461025a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff168061033a5750610339610684565b5b8061035157506000809054906101000a900460ff16155b6103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806106c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156103f6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620186a060978190555067016345785d8a0000609881905550670de0b6b3a7640000609981905550801561043f5760008060016101000a81548160ff0219169083151502179055505b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61047461067c565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610536576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061069c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000803090506000813b905060008114925050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a26469706673582212204f3ad7cb7a3c5b926a5e7592722861868b627ad5be9ea70cc42b86b21221df3b64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "144:584:6:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;144:584:6;;;;;;;",
  "deployedSourceMap": "144:584:6:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;144:584:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;481:38:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;266:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1894:145:13;;;:::i;:::-;;526:200:6;;;:::i;:::-;;1271:77:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2188:240;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2188:240:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;481:38:6;;;;:::o;364:45::-;;;;:::o;266:39::-;;;;:::o;1894:145:13:-;1485:12;:10;:12::i;:::-;1475:22;;:6;;;;;;;;;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:1:::1;1963:40;;1984:6;;;;;;;;;;;1963:40;;;;;;;;;;;;2030:1;2013:6;;:19;;;;;;;;;;;;;;;;;;1894:145::o:0;526:200:6:-;1024:12:12;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;606:6:6::1;579:24;:33;;;;655:10;622:30;:43;;;;712:7;686:23;:33;;;;1268:14:12::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;526:200:6;:::o;1271:77:13:-;1309:7;1335:6;;;;;;;;;;;1328:13;;1271:77;:::o;2188:240::-;1485:12;:10;:12::i;:::-;1475:22;;:6;;;;;;;;;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:1:::1;2276:22;;:8;:22;;;;2268:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:8;2356:38;;2377:6;;;;;;;;;;;2356:38;;;;;;;;;;;;2413:8;2404:6;;:17;;;;;;;;;;;;;;;;;;2188:240:::0;:::o;931:104:11:-;984:15;1018:10;1011:17;;931:104;:::o;1409:498:12:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o",
  "source": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.8;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\";\n\ncontract SystemParameters is OwnableUpgradeSafe {\n\n    // Minimum ankr staking amount to be abel to initialize a pool\n    uint256 public PROVIDER_MINIMUM_STAKING;\n\n    // Minimum staking amount for pool participants\n    uint256 public REQUESTER_MINIMUM_POOL_STAKING; // 0.1 ETH\n\n    // Minimum slashing amount for migration as ether\n    uint256 public SLASHINGS_FOR_MIGRATION;\n\n    function initialize() external initializer {\n        PROVIDER_MINIMUM_STAKING = 100000;\n        REQUESTER_MINIMUM_POOL_STAKING = 100 finney; // 0.1 ETH\n        SLASHINGS_FOR_MIGRATION = 1 ether;\n    }\n}",
  "sourcePath": "/Users/anilkucukrecep/Code/Personal/st/contracts/contracts/SystemParameters.sol",
  "ast": {
    "absolutePath": "/Users/anilkucukrecep/Code/Personal/st/contracts/contracts/SystemParameters.sol",
    "exportedSymbols": {
      "SystemParameters": [
        3039
      ]
    },
    "id": 3040,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3011,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 3012,
        "nodeType": "ImportDirective",
        "scope": 3040,
        "sourceUnit": 3421,
        "src": "63:79:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3013,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3420,
              "src": "173:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$3420",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 3014,
            "nodeType": "InheritanceSpecifier",
            "src": "173:18:6"
          }
        ],
        "contractDependencies": [
          3217,
          3290,
          3420
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3039,
        "linearizedBaseContracts": [
          3039,
          3420,
          3217,
          3290
        ],
        "name": "SystemParameters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6c70b1e5",
            "id": 3016,
            "mutability": "mutable",
            "name": "PROVIDER_MINIMUM_STAKING",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "266:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21011331",
            "id": 3018,
            "mutability": "mutable",
            "name": "REQUESTER_MINIMUM_POOL_STAKING",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "364:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3017,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "364:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aea175e",
            "id": 3020,
            "mutability": "mutable",
            "name": "SLASHINGS_FOR_MIGRATION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "481:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3019,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3037,
              "nodeType": "Block",
              "src": "569:157:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3025,
                      "name": "PROVIDER_MINIMUM_STAKING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "579:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030303030",
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "606:6:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "579:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3028,
                  "nodeType": "ExpressionStatement",
                  "src": "579:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3029,
                      "name": "REQUESTER_MINIMUM_POOL_STAKING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "622:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 3030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:10:6",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "100"
                    },
                    "src": "622:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3032,
                  "nodeType": "ExpressionStatement",
                  "src": "622:43:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3033,
                      "name": "SLASHINGS_FOR_MIGRATION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3020,
                      "src": "686:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "712:7:6",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "686:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "686:33:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 3038,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3023,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3022,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3263,
                  "src": "557:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "557:11:6"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:6"
            },
            "returnParameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:6"
            },
            "scope": 3039,
            "src": "526:200:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3040,
        "src": "144:584:6"
      }
    ],
    "src": "38:690:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/anilkucukrecep/Code/Personal/st/contracts/contracts/SystemParameters.sol",
    "exportedSymbols": {
      "SystemParameters": [
        3039
      ]
    },
    "id": 3040,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3011,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 3012,
        "nodeType": "ImportDirective",
        "scope": 3040,
        "sourceUnit": 3421,
        "src": "63:79:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3013,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3420,
              "src": "173:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$3420",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 3014,
            "nodeType": "InheritanceSpecifier",
            "src": "173:18:6"
          }
        ],
        "contractDependencies": [
          3217,
          3290,
          3420
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3039,
        "linearizedBaseContracts": [
          3039,
          3420,
          3217,
          3290
        ],
        "name": "SystemParameters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6c70b1e5",
            "id": 3016,
            "mutability": "mutable",
            "name": "PROVIDER_MINIMUM_STAKING",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "266:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21011331",
            "id": 3018,
            "mutability": "mutable",
            "name": "REQUESTER_MINIMUM_POOL_STAKING",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "364:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3017,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "364:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aea175e",
            "id": 3020,
            "mutability": "mutable",
            "name": "SLASHINGS_FOR_MIGRATION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3039,
            "src": "481:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3019,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3037,
              "nodeType": "Block",
              "src": "569:157:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3025,
                      "name": "PROVIDER_MINIMUM_STAKING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "579:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030303030",
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "606:6:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "579:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3028,
                  "nodeType": "ExpressionStatement",
                  "src": "579:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3029,
                      "name": "REQUESTER_MINIMUM_POOL_STAKING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "622:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 3030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:10:6",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "100"
                    },
                    "src": "622:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3032,
                  "nodeType": "ExpressionStatement",
                  "src": "622:43:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3033,
                      "name": "SLASHINGS_FOR_MIGRATION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3020,
                      "src": "686:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "712:7:6",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "686:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "686:33:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 3038,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3023,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3022,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3263,
                  "src": "557:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "557:11:6"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:6"
            },
            "returnParameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:6"
            },
            "scope": 3039,
            "src": "526:200:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3040,
        "src": "144:584:6"
      }
    ],
    "src": "38:690:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x35Ac54a964477ea2bEae7270BdacC331Fe13A1Ab",
      "transactionHash": "0x49b9e073cf7fb5f48cb140e8da438654414b30abbea1fd1f2611cd88150ad017"
    }
  },
  "schemaVersion": "3.3.0",
  "updatedAt": "2020-10-16T22:34:43.466Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}